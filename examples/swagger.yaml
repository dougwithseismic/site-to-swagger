"openapi: 3.0.0\ninfo:\n  title: Reverse Any Frontend API with site-to-swagger - Example Docs\n  version: 1.0.0\n  description: >-\n    Automatically generate OpenAPI (Swagger) documentation from HTTP Archive\n    (HAR) files. Learn how at\n    https://github.com/dougwithseismic/site-to-swagger.  This tool extracts\n    endpoint data and responses from HAR files to produce comprehensive OpenAPI\n    documentation for reverse hackery. It supports parsing of requests,\n    responses, JSON body translations, and more.\n  contact:\n    name: Dougie Silkstone\n    email: doug@withseismic.com\n    url: https://www.withseismic.com\n    x-twitter: '@dougiesilkstone'\nexternalDocs:\n  description: Site-to-Swagger GitHub Repo\n  url: https://github.com/dougwithseismic/site-to-swagger\nservers:\n  - url: http://example.com\npaths:\n  /api/users:\n    post:\n      parameters:\n        - name: create\n          in: query\n          required: true\n          example: 'true'\n          schema:\n            type: string\n        - name: Content-Type\n          in: header\n          required: true\n          example: application/json\n          schema:\n            type: string\n        - name: User-Agent\n          in: header\n          required: true\n          example: Mozilla/5.0\n          schema:\n            type: string\n      responses:\n        '201':\n          description: >-\n            Created: {\"id\":\"12345\",\"name\":\"John\n            Doe\",\"email\":\"john.doe@example.com\"}\n          content:\n            application/json:\n              schema:\n                type: object\n              example: '{\"id\":\"12345\",\"name\":\"John Doe\",\"email\":\"john.doe@example.com\"}'\n      summary: http://example.com/api/users?create=true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n            example: '{\"name\":\"John Doe\",\"email\":\"john.doe@example.com\"}'\n      tags:\n        - users\n  /api/users/{usersId}:\n    put:\n      parameters:\n        - name: usersId\n          in: path\n          required: true\n          schema:\n            type: integer\n            default: '12345'\n        - name: update\n          in: query\n          required: true\n          example: name\n          schema:\n            type: string\n        - name: Content-Type\n          in: header\n          required: true\n          example: application/json\n          schema:\n            type: string\n        - name: Authorization\n          in: header\n          required: true\n          example: Bearer token12345\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'OK: {\"id\":\"12345\",\"name\":\"Jane Doe\",\"email\":\"jane.doe@example.com\"}'\n          content:\n            application/json:\n              schema:\n                type: object\n              example: '{\"id\":\"12345\",\"name\":\"Jane Doe\",\"email\":\"jane.doe@example.com\"}'\n      summary: http://example.com/api/users/12345?update=name\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n            example: '{\"name\":\"Jane Doe\",\"email\":\"jane.doe@example.com\"}'\n      tags:\n        - users\n  /api/products:\n    post:\n      parameters:\n        - name: create\n          in: query\n          required: true\n          example: 'true'\n          schema:\n            type: string\n        - name: Content-Type\n          in: header\n          required: true\n          example: application/json\n          schema:\n            type: string\n      responses:\n        '201':\n          description: >-\n            Created: {\"productId\":\"98765\",\"productName\":\"New\n            Product\",\"description\":\"This is a new product\",\"price\":19.99}\n          content:\n            application/json:\n              schema:\n                type: object\n              example: >-\n                {\"productId\":\"98765\",\"productName\":\"New\n                Product\",\"description\":\"This is a new product\",\"price\":19.99}\n      summary: http://example.com/api/products?create=true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n            example: >-\n              {\"productName\":\"New Product\",\"description\":\"This is a new\n              product\",\"price\":19.99}\n      tags:\n        - products\n  /api/products/{productsId}:\n    put:\n      parameters:\n        - name: productsId\n          in: path\n          required: true\n          schema:\n            type: integer\n            default: '98765'\n        - name: update\n          in: query\n          required: true\n          example: price\n          schema:\n            type: string\n        - name: Content-Type\n          in: header\n          required: true\n          example: application/json\n          schema:\n            type: string\n      responses:\n        '200':\n          description: >-\n            OK: {\"productId\":\"98765\",\"productName\":\"New\n            Product\",\"description\":\"This is a new product\",\"price\":24.99}\n          content:\n            application/json:\n              schema:\n                type: object\n              example: >-\n                {\"productId\":\"98765\",\"productName\":\"New\n                Product\",\"description\":\"This is a new product\",\"price\":24.99}\n      summary: http://example.com/api/products/98765?update=price\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n            example: '{\"price\":24.99}'\n      tags:\n        - products\n"